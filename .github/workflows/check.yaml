on:
  workflow_dispatch:
  push:
    branches: main
    paths-ignore:
      - "**.md"
      - ".github/**"
  pull_request:
    branches: main
    paths-ignore:
      - "**.md"
      - ".github/**"

permissions:
  contents: read

jobs:
  clippy-fmt:
    name: Check Clippy and rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Check Clippy
        run: cargo clippy --workspace -- -D warnings
      - name: Check rustfmt
        run: cargo fmt --all -- --check

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: stable

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: nightly
    steps:
      - uses: actions/checkout@v4
      - run: ${{ matrix.deps }}
      - name: Install Rust toolchain & target via sudo
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y curl build-essential
          curl https://sh.rustup.rs -sSf | sudo sh -s -- -y --default-toolchain ${{ matrix.toolchain }}
          echo 'export PATH="/root/.cargo/bin:$PATH"' >> $GITHUB_ENV
          sudo /root/.cargo/bin/rustup target add ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2

      - name: Install Cargo via apt
        run: |
          sudo apt-get install -y cargo

      - name: Install other dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: |
            openjdk-8-jdk
            build-essential
            python3
            python-is-python3
            libseccomp-dev
            libgbm-dev
            libxkbcommon-x11-0
            pkg-config

      - name: Integration test
        run: sudo -E cargo test --target ${{ matrix.target }}
